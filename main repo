function Snipe()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Jschlopes/Khlopper-repository/main/needs-testing"))()
end

function Hop()
	local Players = game:GetService("Players")
	local HttpService = game:GetService("HttpService")
	local TeleportService = game:GetService("TeleportService")

	local placeId,jobId = game.PlaceId, game.JobId
	local serversUrl = "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Desc&limit=100"

	local function listServers(cursor)
		local success, result = pcall(game.HttpGet, game, serversUrl .. (cursor and "&cursor="..cursor or ""))
		return success and HttpService:JSONDecode(result) or {}
	end

	local nextPageCursor
	repeat
		local servers = listServers(nextPageCursor)
		for _, server in ipairs(servers.data) do
			if server.playing < server.maxPlayers and server.id ~= jobId then
				local success, error = pcall(TeleportService.TeleportToPlaceInstance, TeleportService, placeId, server.id, Players.LocalPlayer)
				if success then
					return
				end
			end
		end
		nextPageCursor = servers.nextPageCursor
	until not nextPageCursor
end

if game.PlaceId == 15502339080 then
	if workspace.DistributedGameTime > 300 and game.Players.LocalPlayer.PlayerGui:FindFirstChild("__INTRO") then
		Hop()
	else
		Snipe()
	end
end
